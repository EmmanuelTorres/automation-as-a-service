{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation for User API",
    "title": "of User API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/users": {
      "get": {
        "description": "Return a list of users from the database",
        "tags": [
          "users"
        ],
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "$ref": "#/responses/usersResponse"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "description": "Returns a single user from the database",
        "tags": [
          "users"
        ],
        "operationId": "GetUser",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Username",
            "description": "The username of the user for which the operation relates",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/userResponse"
          }
        }
      },
      "post": {
        "description": "Returns the id of a newly created user",
        "tags": [
          "users"
        ],
        "operationId": "CreateUser",
        "responses": {
          "201": {
            "$ref": "#/responses/objectCreatedResponse"
          }
        }
      },
      "delete": {
        "description": "Deletes the user from the database",
        "tags": [
          "users"
        ],
        "operationId": "DeleteUser",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Username",
            "description": "The username of the user for which the operation relates",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/noContentResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Person": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "string"
        },
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "Password": {
          "type": "string"
        },
        "Role": {
          "$ref": "#/definitions/Role"
        },
        "Username": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/automation-as-a-service/internal/datastruct"
    },
    "Role": {
      "type": "string",
      "x-go-package": "github.com/automation-as-a-service/internal/datastruct"
    }
  },
  "responses": {
    "noContentResponse": {
      "description": "No content is returned by this API endpoint"
    },
    "objectCreatedResponse": {
      "description": "A single id of the newly-created object",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Id"
          }
        }
      }
    },
    "userResponse": {
      "description": "A single users",
      "schema": {
        "$ref": "#/definitions/Person"
      }
    },
    "usersResponse": {
      "description": "A list of users",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Person"
        }
      }
    }
  }
}